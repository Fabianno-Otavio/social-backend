// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  socialName   String
  username     String
  email        String
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  posts        Post[]
  postLikes    PostLike[]
  comments     Comment[]
  commentLikes CommentLike[]
  followedBy   String[]
  following    String[]
}

model Post {
  id           String        @id @default(uuid())
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  title        String
  content      String
  likeCount    Int           @default(0)
  comments     Comment[]
  commentLikes CommentLike[]
  postLikes    PostLike[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model PostLike {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

model Comment {
  id        String @id @default(uuid())
  post      Post   @relation(fields: [postId], references: [id])
  postId    String
  user      User   @relation(fields: [userId], references: [id])
  userId    String
  content   String
  likeCount Int    @default(0)
}

model CommentLike {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
}
